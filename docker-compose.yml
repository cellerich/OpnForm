version: "3.7"


services:
  php:
    build: .
#        image: opnform:0.0.1
    volumes:
      - ./:/var/www/app
    networks:
      - backend

# our proxy to route all incoming traffic to the artisam app
  proxy:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/app
      - ./nginx-site.conf:/etc/nginx/conf.d/default.conf
    networks:
      - frontend
      - backend            

# the postgres service using the latest official image, it also maps the postgres-data volume
# to /var/lib/postgresql/data in the container, maps the local port 5432 to the container 
# port 5432 and specifies the database, user and password to use (they will be created from the .env 
# variabbles the first time the container is run).

  postgres:
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_DB: $DB_DATABASE
      PGDATA: /var/lib/postgresql/data
    networks:
      - backend

# the redis service using the latest official image and mapping the redis-data volume to
# /data in the container as well as local port 6379 to container port 6379.
  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - backend

# the minio service using the latest official image and mapping the minio-data volume to
# /data in the container as well as local port 9001 to container port 9001.
# minio WebUI would be available on port 9000 if we uncomment the last network line
  minio:
    image: quay.io/minio/minio
    volumes:
        - minio-data:/data
    command:
      - server
      - /data
      - --console-address
      - ":9001"
    ports:
        - "9000:9000"
        - "9001:9001"
    environment:
      MINIO_ROOT_USER: $AWS_ACCESS_KEY_ID
      MINIO_ROOT_PASSWORD: $AWS_SECRET_ACCESS_KEY
      MINIO_SITE_REGION: $AWS_DEFAULT_REGION      
    networks:
      - backend
      #- frontend #uncomment if you want to reach minio WebUI on port 9000

# creates the volumes to use with postgres and redis so we have data persistence
volumes:
  postgres-data:
  redis-data:
  minio-data:

# our networks 
networks:
  frontend:
  backend: